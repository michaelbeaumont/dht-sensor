#[target.'cfg(all(target_arch = "arm", target_os = "none"))']
#runner = "arm-none-eabi-gdb -x openocd.gdb -q"


# rustflags set in Cargo.toml so that memoryMaps can be specified
#rustflags = [
#  # LLD (shipped with the Rust toolchain) is used as the default linker
#   #"-C", "link-arg=-Tlink.x"  , "-L", "memoryMaps/stm32f042" 
#  "-C", "link-arg=-Tlink.x"  , 
#  #"-L", "memoryMaps/stm32f411" 
#]

[target.thumbv7m-none-eabi]
#runner = 'arm-none-eabi-gdb'
runner = "gdb-multiarch -q -x openocd.gdb"
rustflags = [
  "-C", "link-arg=-Tlink.x",  #"-L", "memoryMaps/stm32f103" 
]

[target.thumbv7em-none-eabi]
#runner = 'arm-none-eabi-gdb'
runner = "gdb-multiarch -q -x openocd.gdb"
rustflags = [
  "-C", "link-arg=-Tlink.x",
]

[target.thumbv7em-none-eabihf]
#runner = 'arm-none-eabi-gdb'
runner = "gdb-multiarch -q -x openocd.gdb"
#rustc-link-search = [all = "memoryMaps/stm32f042"]
rustflags = [
  "-C", "link-arg=-Tlink.x"
]

[target.riscv32imac-unknown-none-elf]
#runner = 'riscv64-unknown-elf-gdb -x openocd.gdb'
runner = "gdb-multiarch -q -x openocd.gdb"
rustflags = [
  #"-C", "link-arg=-memory-CB.x",
  "-C", "link-arg=-Tlink.x",
]
